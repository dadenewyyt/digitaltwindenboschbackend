[agent]
  interval = "10s"           # Interval for collecting and sending data
  flush_interval = "10s"     # Interval for flushing data to outputs
  debug = true               # Enable debug logging for troubleshooting
  quiet = false              # Disable quiet mode to allow logging

# Kafka Consumer for Environmental Data
[[inputs.kafka_consumer]]
  brokers = ["kafka:19092"]  # Kafka broker address
  topics = ["environmental_data"]  # Kafka topic to consume
  consumer_group = "telegraf-env"  # Kafka consumer group
  data_format = "json"       # Data format of the Kafka messages
  json_time_key = "timestamp"  # Key in JSON containing the timestamp
  json_time_format = "2006-01-02T15:04:05.999999-07:00"  # Timestamp format
  json_timezone = "UTC"      # Timezone for the timestamp
  tag_keys = ["weather"]     # Add "weather" as a tag
  fieldpass = ["co2", "no2", "pm25", "anomaly", "latitude", "longitude"]  # Fields to include

# Kafka Consumer for Sound Pollution Data
[[inputs.kafka_consumer]]
  brokers = ["kafka:19092"]  # Kafka broker address
  topics = ["sound_pollution_data"]  # Kafka topic to consume
  consumer_group = "telegraf-sound"  # Kafka consumer group
  data_format = "json"       # Data format of the Kafka messages
  json_time_key = "timestamp"  # Key in JSON containing the timestamp
  json_time_format = "2006-01-02T15:04:05.999999-07:00"  # Timestamp format
  json_timezone = "UTC"      # Timezone for the timestamp
  tag_keys = ["location_type"]  # Add "location_type" as a tag
  fieldpass = ["sound_level", "latitude", "longitude"]  # Fields to include

# InfluxDB v2 Output
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]  # InfluxDB server URL
  token = "$INFLUX_TOKEN"          # InfluxDB token (replace with actual token or use env variable)
  organization = "DenBosch"        # InfluxDB organization
  bucket = "sensordb_influx"       # InfluxDB bucket to write data to